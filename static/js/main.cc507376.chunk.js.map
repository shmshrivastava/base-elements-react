{"version":3,"sources":["../../src/ThemeWrapper.tsx","../../src/componentConfig.ts","../../src/Button/Button.tsx","../../src/FormField/FormField.tsx","../../src/TextField/TextField.tsx","../../src/Checkbox/Checkbox.tsx","../../src/Card/Card.tsx","../../src/OutsideAlerter.tsx","../../src/Popover/Popover.tsx","../../src/Select/Select.tsx","../../src/Text/Text.tsx","../../src/Stack/Stack.tsx","../../src/Table/TableContext.tsx","../../src/Table/Table.tsx","../../src/index.tsx","icons/star.svg","sections/ButtonSection.tsx","sections/TableSection.tsx","App.tsx","sections/TextFieldSection.tsx","sections/CheckboxSection.tsx","sections/SelectSection.tsx","sections/CardSection.tsx","sections/PopoverSection.tsx","index.tsx"],"names":["filterInitialRootVars","varObject","Object","keys","filter","varKey","BaseElementsReact","initialRootVars","includes","setThemeVariables","themes","currentThemeId","theme","selectedThemeId","defaultTheme","DefaultTheme","id","length","selectedTheme","getCurrentSelectedTheme","root","document","querySelector","documentElement","vars","_theme$vars","colors","forEach","colorKey","style","setProperty","_theme$vars2","_theme$vars3","spacings","spacingKey","_theme$vars4","_theme$vars5","others","otherKey","_theme$vars6","getClassName","componentName","componentConfig","props","additionalClassName","baseClassName","classGenerator","classes","className","prop","propConfig","type","getAdditionalClassesForConfig","trim","replace","styleKeys","appearance","default","variation","loading","disabled","disableMaxContentWidth","Button","React","ref","classNames","renderProps","children","displayName","error","label","required","labelPosition","FormField","Input","TextArea","TextFieldElement","multiline","TextField","textFieldElementProps","checked","sizeVariant","Checkbox","CheckboxField","elevation","noPadding","Card","OutsideAlerter","onOutsideClick","wrapperRef","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","open","Popover","anchorRef","bodyTop","setBodyTop","bodyLeft","setBodyLeft","bodyDisplay","setBodyDisplay","bodyRef","xLocation","anchorOffsetLeft","anchorOffsetWidth","bodyOffsetWidth","xOffset","yLocation","anchorOffsetTop","anchorOffsetHeight","bodyOffsetHeight","yOffset","offsetTop","offsetHeight","offsetLeft","offsetWidth","anchor","e","_anchorRef$current5","firstChild","top","left","visibility","selectOptionComponentConfig","selected","value","SelectOption","onOptionSelect","tabIndex","onKeyDown","code","nextTarget","focus","stopPropagation","previousTarget","persist","onClick","Select","options","showOptions","setShowOptions","width","setWidth","popoverRef","expandIconRef","firstOptionRef","Array","isArray","element","push","op","placeholder","handleValueChange","onValueChange","cardElement","expandIconWidth","cardElementWidth","getClientRects","handleOptionKeyPress","keyCode","which","minWidth","setTimeout","ExpandMoreIcon","map","option","index","key","Text","VariationWrapper","RenderComponent","customTextClassName","customComponentName","InlineText","PageTitle","SectionHeading","SubSectionHeading","ComponentTitle","InlineCode","vertical","itemsVerticalAlignment","itemsHorizontalAlignment","wrapItems","gap","Stack","stackItemComponentConfig","fill","customStackClassName","VerticalStack","HorizontalStack","CenteredContainer","TableContext","variant","hasRowDivider","hasColumnDivider","hasBodyBorder","headerCentered","fullWidth","Table","tableHeadComponentConfig","TableHead","Provider","tableBodyComponentConfig","TableBody","tableRowComponentConfig","TableRow","tableCellComponentConfig","TableCell","tableContext","TableHeaderCell","TableDataCell","TableHeadRow","HeaderTable","header","getInitialRootVars","rootVars","i","window","text","Fragment","_path","_excluded","_extends","assign","bind","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","createElement","height","viewBox","d","ForwardRef","forwardRef","ButtonSection","console","log","TableSection","primaryColor","primaryColorHover","primaryColorDisabled","primaryColorBackground","sectionRouteMap","button","textfield","checkbox","useState","setChecked","onChange","select","setValue","card","popover","setOpen","table","CurrentSection","hashRoute","RouteSelectorItem","location","hash","route","onRouteSelect","name","split","Sidebar","routes","currentRoute","App","slice","setHashRoute","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.cc507376.chunk.js","sourcesContent":["import React from 'react';\nimport DefaultTheme from './defaultTheme.json';\n\ninterface Theme {\n  vars?: {\n    colors?: any;\n    spacings?: any;\n    others?: any;\n  };\n  components?: any;\n  id: string;\n}\n\nfunction getCurrentSelectedTheme(themes: Theme[], currentThemeId?: string) {\n  let selectedThemeId = currentThemeId;\n  const defaultTheme = { ...DefaultTheme, id: 'default' };\n  if (themes?.length === 0) {\n    return defaultTheme;\n  }\n  if (!currentThemeId) {\n    selectedThemeId = 'default';\n  }\n\n  const selectedTheme = themes?.filter(\n    (theme) => theme.id === selectedThemeId\n  )[0];\n\n  return selectedTheme\n    ? { ...defaultTheme, ...selectedTheme }\n    : { ...defaultTheme, ...themes[0] };\n}\n\nfunction filterInitialRootVars(varObject: any) {\n  return Object.keys(varObject || {}).filter(\n    (varKey) => !BaseElementsReact.initialRootVars.includes(`--${varKey}`)\n  );\n}\n\nexport function setThemeVariables(themes: Theme[], currentThemeId?: string) {\n  const theme = getCurrentSelectedTheme(themes || [], currentThemeId);\n  const root =\n    document.querySelector<HTMLElement>(':root') || document.documentElement;\n  filterInitialRootVars(theme.vars?.colors).forEach((colorKey) => {\n    root.style.setProperty(`--${colorKey}`, theme.vars?.colors[colorKey]);\n  });\n  filterInitialRootVars(theme.vars?.spacings).forEach((spacingKey) => {\n    root.style.setProperty(`--${spacingKey}`, theme.vars?.spacings[spacingKey]);\n  });\n  filterInitialRootVars(theme.vars?.others).forEach((otherKey) => {\n    root.style.setProperty(`--${otherKey}`, theme.vars?.others[otherKey]);\n  });\n}\n\ninterface ThemeWrapperProps {\n  themes?: Theme[];\n  currentThemeId?: string;\n  children?: React.ReactNode;\n}\n\nconst ThemeWrapper = ({\n  themes,\n  currentThemeId,\n  children\n}: ThemeWrapperProps) => {\n  setThemeVariables(themes || [], currentThemeId);\n  return <React.Fragment>{children}</React.Fragment>;\n};\n\nexport default ThemeWrapper;\n","export interface ComponentConfig {\n  styleKeys?: string[];\n  classGenerator: any;\n}\n\nfunction getAdditionalClassesForConfig(\n  baseClassName: string,\n  classGenerator: ComponentConfig['classGenerator'],\n  props: any\n) {\n  let classes = props.className || '';\n  Object.keys(classGenerator).forEach((prop) => {\n    const propConfig = classGenerator[prop];\n    if (propConfig.type === 'value' && (props[prop] || propConfig.default)) {\n      classes += ` ${baseClassName}--${prop}-${\n        props[prop] || propConfig.default\n      }`;\n      return;\n    }\n    if (propConfig.type === 'boolean') {\n      if (props[prop]) {\n        classes += ` ${baseClassName}--${prop}`;\n      }\n    }\n  });\n  return classes;\n}\n\nexport function getClassName(\n  componentName: string,\n  componentConfig: ComponentConfig,\n  props: any,\n  additionalClassName?: string\n) {\n  const additionalClassesForConfig = getAdditionalClassesForConfig(\n    componentName,\n    componentConfig.classGenerator,\n    props\n  );\n  const className = `${additionalClassName || ''} ${componentName} ${\n    additionalClassesForConfig || ''\n  }`;\n  return className.trim().replace(/(\\s{2,})+/g, ' ');\n}\n","import * as React from 'react';\nimport { ComponentConfig, getClassName } from '../componentConfig';\nimport './Button.css';\n\ninterface ButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  className?: string;\n  appearance?: 'primary' | 'secondary' | 'danger';\n  variation?: 'plain' | 'outline' | 'plainWithPadding';\n  disableMaxContentWidth?: boolean;\n}\n\nconst componentConfig: ComponentConfig = {\n  styleKeys: ['padding', 'margin'],\n  classGenerator: {\n    appearance: { type: 'value', default: 'primary' },\n    variation: { type: 'value' },\n    loading: { type: 'boolean', default: false },\n    disabled: { type: 'boolean', default: false },\n    disableMaxContentWidth: { type: 'boolean', default: false }\n  }\n};\n\nexport const Button = React.forwardRef<\n  HTMLButtonElement,\n  React.PropsWithChildren<ButtonProps>\n>((props, ref) => {\n  const classNames = getClassName('Button', componentConfig, props);\n  const renderProps = { ...props };\n  delete renderProps.variation;\n  delete renderProps.appearance;\n  delete renderProps.disableMaxContentWidth;\n  return (\n    <button ref={ref} {...renderProps} className={classNames}>\n      {props.children}\n    </button>\n  );\n});\n\nexport default Button;\n\nButton.displayName = 'Button';\n","import * as React from 'react';\nimport { ComponentConfig, getClassName } from '../componentConfig';\nimport './FormField.css';\n\nexport interface FormFieldProps extends React.ComponentPropsWithoutRef<'div'> {\n  className?: string;\n  label?: string | React.ReactNode;\n  error?: string;\n  labelPosition?: 'top' | 'right' | 'bottom' | 'left';\n  required?: boolean;\n}\n\nconst componentConfig: ComponentConfig = {\n  styleKeys: [],\n  classGenerator: {\n    error: { type: 'boolean', default: false },\n    label: { type: 'boolean', default: false },\n    required: { type: 'boolean', default: false },\n    labelPosition: { type: 'value', default: 'top' }\n  }\n};\n\nexport const FormField = React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<FormFieldProps>\n>((props, ref) => {\n  const { label, labelPosition = 'top', error, children } = props;\n  const classNames = getClassName('FormField', componentConfig, props);\n  return (\n    <div ref={ref} className={classNames}>\n      <div className='FormField-ElementContainer'>\n        {['top', 'left'].includes(labelPosition) && <label>{label}</label>}\n        <div className='FormField-Element'>{children}</div>\n        {['bottom', 'right'].includes(labelPosition) && <label>{label}</label>}\n      </div>\n      {error && <span className='FormField-Error'>{error}</span>}\n    </div>\n  );\n});\n\nexport default FormField;\n\nFormField.displayName = 'FormField';\n","import * as React from 'react';\nimport { ComponentConfig, getClassName } from '../componentConfig';\nimport FormField, { FormFieldProps } from '../FormField';\nimport './TextField.css';\n\nconst componentConfig: ComponentConfig = {\n  styleKeys: [],\n  classGenerator: {\n    disabled: { type: 'boolean', default: false }\n  }\n};\n\ninterface InputProps extends React.ComponentPropsWithoutRef<'input'> {\n  className?: string;\n}\n\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\n  (props, ref) => {\n    const classNames = getClassName(\n      'Input',\n      componentConfig,\n      props,\n      'TextFieldElement'\n    );\n    return <input ref={ref} {...props} className={classNames} />;\n  }\n);\n\nInput.displayName = 'Input';\n\ninterface TextAreaProps extends React.ComponentPropsWithoutRef<'textarea'> {\n  className?: string;\n}\n\nexport const TextArea = React.forwardRef<HTMLTextAreaElement, TextAreaProps>(\n  (props, ref) => {\n    const classNames = getClassName(\n      'TextArea',\n      componentConfig,\n      props,\n      'TextFieldElement'\n    );\n    return <textarea ref={ref} {...props} className={classNames} />;\n  }\n);\n\nTextArea.displayName = 'TextArea';\n\ninterface InputFieldProps extends InputProps {\n  multiline?: false;\n}\n\ninterface TextAreaFieldProps extends TextAreaProps {\n  multiline: true;\n}\n\ninterface InputFieldRenderProps extends InputProps {\n  multiline?: false;\n}\n\ninterface TextAreaFieldRenderProps extends TextAreaProps {\n  multiline?: true;\n}\n\ntype TextFieldElementProps = InputFieldProps | TextAreaFieldProps;\n\nexport const TextFieldElement = (props: TextFieldElementProps) => {\n  const isMultiline = props.multiline;\n  let renderProps;\n  if (isMultiline) {\n    renderProps = { ...props } as TextAreaFieldRenderProps;\n    delete renderProps.multiline;\n    return <TextArea {...renderProps} />;\n  }\n  renderProps = { ...props } as InputFieldRenderProps;\n  delete renderProps.multiline;\n  return <Input {...renderProps} />;\n};\n\nexport type TextFieldProps = TextFieldElementProps & FormFieldProps;\n\nexport const TextField = React.forwardRef<HTMLDivElement, TextFieldProps>(\n  (props, ref) => {\n    const textFieldElementProps = { ...props };\n    delete textFieldElementProps.label;\n    delete textFieldElementProps.error;\n    delete textFieldElementProps.labelPosition;\n    return (\n      <FormField\n        ref={ref}\n        label={props.label}\n        labelPosition={props.labelPosition}\n        error={props.error}\n        required={props.required}\n        className={`${props.className || ''} TextField-Container`}\n      >\n        <TextFieldElement\n          {...(textFieldElementProps as TextFieldElementProps)}\n        />\n      </FormField>\n    );\n  }\n);\n\nexport default TextField;\n\nTextField.displayName = 'TextField';\n","import * as React from 'react';\nimport { ComponentConfig, getClassName } from '../componentConfig';\nimport FormField, { FormFieldProps } from '../FormField';\nimport './Checkbox.css';\n\ninterface CheckboxProps extends React.ComponentPropsWithoutRef<'input'> {\n  className?: string;\n  checked?: boolean;\n  sizeVariant?: 'normal' | 'large' | string;\n}\n\nconst componentConfig: ComponentConfig = {\n  styleKeys: ['padding', 'margin'],\n  classGenerator: {\n    disabled: { type: 'boolean', default: false },\n    checked: { type: 'boolean', default: false },\n    sizeVariant: { type: 'value' }\n  }\n};\n\nexport const Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>(\n  (props, ref) => {\n    const classNames = getClassName('Checkbox', componentConfig, props);\n    const renderProps = { ...props };\n    delete renderProps.sizeVariant;\n    return (\n      <input\n        {...renderProps}\n        type='checkbox'\n        ref={ref}\n        className={classNames}\n      />\n    );\n  }\n);\n\nexport default Checkbox;\n\nCheckbox.displayName = 'Checkbox';\n\ntype CheckboxFieldProps = FormFieldProps & CheckboxProps;\n\nexport const CheckboxField = React.forwardRef<\n  HTMLDivElement,\n  CheckboxFieldProps\n>((props, ref) => {\n  return (\n    <FormField\n      ref={ref}\n      label={props.label}\n      labelPosition={props.labelPosition || 'right'}\n      error={props.error}\n      required={props.required}\n      className={`${props.className || ''} Checkbox-Container`}\n    >\n      <Checkbox {...props} />\n    </FormField>\n  );\n});\n","import * as React from 'react';\nimport { ComponentConfig, getClassName } from '../componentConfig';\nimport './Card.css';\n\nexport interface CardProps extends React.ComponentPropsWithoutRef<'div'> {\n  className?: string;\n  elevation?: 'normal' | 'low' | 'high';\n  noPadding?: boolean;\n}\n\nconst componentConfig: ComponentConfig = {\n  styleKeys: [],\n  classGenerator: {\n    elevation: { type: 'value', default: 'normal' },\n    noPadding: {type: 'boolean', default: false}\n  }\n};\n\nexport const Card = React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<CardProps>\n>((props, ref) => {\n  const classNames = getClassName('Card', componentConfig, props);\n  return (\n    <div ref={ref} className={classNames}>\n      {props.children}\n    </div>\n  );\n});\n\nexport default Card;\n\nCard.displayName = 'Card';\n","import * as React from 'react';\n\n// Referred from https://stackoverflow.com/a/42234988/5645807\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(\n  ref: React.RefObject<HTMLDivElement | null>,\n  onOutsideClick: ((event: MouseEvent | TouchEvent) => void) | undefined\n) {\n  React.useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event: MouseEvent | TouchEvent) {\n      if (ref.current && !ref.current.contains(event.target as HTMLElement)) {\n        if (onOutsideClick) {\n          onOutsideClick(event);\n        }\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref]);\n}\n\ninterface OutsideAlerterProps extends React.ComponentPropsWithoutRef<'div'> {\n  onOutsideClick?: (event: MouseEvent | TouchEvent) => void;\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nexport default function OutsideAlerter(\n  props: React.PropsWithChildren<OutsideAlerterProps>\n) {\n  const wrapperRef = React.useRef<HTMLDivElement | null>(null);\n  useOutsideAlerter(wrapperRef, props.onOutsideClick);\n\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n","import * as React from 'react';\nimport Card, { CardProps } from '../Card';\nimport { ComponentConfig, getClassName } from '../componentConfig';\nimport OutsideAlerter from '../OutsideAlerter';\nimport './Popover.css';\n\ninterface PopoverProps extends CardProps {\n  className?: string;\n  anchor: React.ReactNode;\n  open: boolean;\n  onOutsideClick?: () => void;\n  xLocation?: 'snap_left_edge' | 'center' | 'snap_right_edge';\n  yLocation?:\n    | 'top'\n    | 'top_cover_anchor'\n    | 'center'\n    | 'bottom_cover_anchor'\n    | 'bottom';\n  xOffset?: number;\n  yOffset?: number;\n}\n\nconst componentConfig: ComponentConfig = {\n  styleKeys: [],\n  classGenerator: {\n    open: { type: 'boolean', default: false }\n  }\n};\n\nfunction getLocationX(\n  xLocation: PopoverProps['xLocation'],\n  anchorOffsetLeft: number,\n  anchorOffsetWidth: number,\n  bodyOffsetWidth: number,\n  xOffset: number\n): number {\n  if (xLocation === 'snap_left_edge') {\n    return anchorOffsetLeft + xOffset;\n  }\n  if (xLocation === 'snap_right_edge') {\n    return anchorOffsetLeft + anchorOffsetWidth - bodyOffsetWidth + xOffset;\n  }\n  return (\n    anchorOffsetLeft + anchorOffsetWidth / 2 - bodyOffsetWidth / 2 + xOffset\n  );\n}\n\nfunction getLocationY(\n  yLocation: PopoverProps['yLocation'],\n  anchorOffsetTop: number,\n  anchorOffsetHeight: number,\n  bodyOffsetHeight: number,\n  yOffset: number\n): number {\n  if (yLocation === 'top') {\n    return anchorOffsetTop - bodyOffsetHeight + yOffset;\n  }\n  if (yLocation === 'top_cover_anchor') {\n    return anchorOffsetTop + anchorOffsetHeight - bodyOffsetHeight + yOffset;\n  }\n  if (yLocation === 'bottom_cover_anchor') {\n    return anchorOffsetTop + yOffset;\n  }\n  if (yLocation === 'bottom') {\n    return anchorOffsetTop + anchorOffsetHeight + yOffset;\n  }\n  return (\n    anchorOffsetTop + anchorOffsetHeight / 2 - bodyOffsetHeight / 2 + yOffset\n  );\n}\n\nexport const Popover = React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<PopoverProps>\n>((props, ref) => {\n  const classNames = getClassName('Popover', componentConfig, props);\n  const anchorRef = React.useRef<HTMLDivElement | null>(null);\n  const [bodyTop, setBodyTop] = React.useState(-1);\n  const [bodyLeft, setBodyLeft] = React.useState(-1);\n  const [bodyDisplay, setBodyDisplay] = React.useState(false);\n  const bodyRef = React.useRef<HTMLDivElement | null>(null);\n\n  React.useEffect(() => {\n    if (anchorRef && bodyRef) {\n      setBodyTop(\n        getLocationY(\n          props.yLocation,\n          anchorRef.current?.offsetTop || -1,\n          anchorRef.current?.offsetHeight || 0,\n          bodyRef.current?.offsetHeight || 0,\n          props.yOffset || 0\n        )\n      );\n      setBodyLeft(\n        getLocationX(\n          props.xLocation,\n          anchorRef.current?.offsetLeft || -1,\n          anchorRef.current?.offsetWidth || 0,\n          bodyRef.current?.offsetWidth || 0,\n          props.xOffset || 0\n        )\n      );\n      setBodyDisplay(true);\n    } else {\n      setBodyDisplay(false);\n    }\n  }, [anchorRef, bodyRef]);\n\n  const handleOutsideClick = (e: any) => {\n    if (props.onOutsideClick && e.target !== anchorRef.current?.firstChild) {\n      props.onOutsideClick();\n    }\n  };\n\n  return (\n    <div ref={ref} className={classNames}>\n      <div ref={anchorRef} className='PopoverAnchor'>\n        {props.anchor}\n      </div>\n      <OutsideAlerter onOutsideClick={handleOutsideClick}>\n        <div\n          style={{\n            top: bodyTop,\n            left: bodyLeft,\n            visibility: bodyDisplay && props.open ? 'visible' : 'hidden'\n          }}\n          className='PopoverBody'\n          ref={bodyRef}\n        >\n          <Card>{props.children}</Card>\n        </div>\n      </OutsideAlerter>\n    </div>\n  );\n});\n\nexport default Popover;\n\nPopover.displayName = 'Popover';\n","import * as React from 'react';\nimport { ComponentConfig, getClassName } from '../componentConfig';\nimport Popover from '../Popover';\nimport { ReactComponent as ExpandMoreIcon } from '../icons/ExpandMore.svg';\nimport './Select.css';\n\ninterface Option {\n  value: string;\n  label: React.ReactNode;\n}\n\ninterface SelectProps {\n  className?: string;\n  options?: Option[];\n  value?: string | null;\n  placeholder?: Option['label'];\n  onValueChange?:\n    | ((value: string | undefined | null) => {})\n    | React.Dispatch<React.SetStateAction<string | undefined | null>>;\n}\n\ninterface SelectOptionProps extends React.ComponentPropsWithoutRef<'div'> {\n  value?: string;\n  selected?: boolean;\n  onOptionSelect?: (value: string | undefined) => void;\n}\n\nconst selectOptionComponentConfig: ComponentConfig = {\n  styleKeys: ['padding', 'margin'],\n  classGenerator: {\n    selected: { type: 'boolean', default: false },\n    value: { type: 'value' }\n  }\n};\n\nexport const SelectOption = React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<SelectOptionProps>\n>((props, ref) => {\n  const classNames = getClassName(\n    'SelectOption',\n    selectOptionComponentConfig,\n    props\n  );\n  const handleKeyPress = (\n    event: React.SyntheticEvent<HTMLDivElement, KeyboardEvent>\n  ) => {\n    var code = event['keyCode'];\n    if (code === 13) {\n      if (props.onOptionSelect) {\n        props.onOptionSelect(props.value);\n      }\n      return;\n    }\n    if (code === 40) {\n      // Down key pressed\n      const nextTarget = event?.target && event?.target['nextSibling'];\n      nextTarget && nextTarget.focus();\n      event.stopPropagation();\n      return;\n    }\n    if (code === 38) {\n      // Up key pressed\n      const previousTarget = event?.target && event?.target['previousSibling'];\n      previousTarget && previousTarget.focus();\n      event.stopPropagation();\n      return;\n    }\n    event.persist();\n    if (props.onKeyDown) {\n      props.onKeyDown(event as any);\n    }\n  };\n\n  const renderProps = { ...props };\n  delete renderProps.onOptionSelect;\n  return (\n    <div\n      {...renderProps}\n      tabIndex={0}\n      ref={ref}\n      className={classNames}\n      data-value={props.value}\n      onKeyDown={handleKeyPress}\n      onClick={() => {\n        if (props.onOptionSelect) {\n          props.onOptionSelect(props.value);\n        }\n      }}\n    >\n      <div className='SelectOption-Content'>{props.children}</div>\n    </div>\n  );\n});\n\nconst componentConfig: ComponentConfig = {\n  styleKeys: ['padding', 'margin'],\n  classGenerator: {\n    loading: { type: 'boolean', default: false },\n    disabled: { type: 'boolean', default: false }\n  }\n};\n\nexport const Select = React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<SelectProps>\n>((props, ref) => {\n  const classNames = getClassName('Select', componentConfig, props);\n  const options = props.options ? [...props.options] : [];\n  const [showOptions, setShowOptions] = React.useState(false);\n  const [width, setWidth] = React.useState(0);\n  const popoverRef = React.useRef<HTMLDivElement>(null);\n  const expandIconRef = React.useRef<HTMLDivElement>(null);\n  const firstOptionRef = React.useRef<HTMLDivElement>(null);\n\n  const children = Array.isArray(props.children)\n    ? props.children\n    : [props.children];\n\n  children.forEach((element: React.ReactElement) => {\n    options.push({\n      value: element.props.value,\n      label: element.props.children\n    });\n  });\n\n  const value =\n    (props.value &&\n      options &&\n      options.length > 0 &&\n      options.filter((op) => op.value === props.value)[0].label) ||\n    props.placeholder ||\n    (options && options.length > 0 ? options[0].label : '');\n\n  const renderProps = { ...props };\n  delete renderProps.options;\n\n  const handleValueChange = (value: SelectProps['value']) => {\n    if (props.onValueChange) {\n      props.onValueChange(value);\n    }\n    setShowOptions(false);\n  };\n\n  let cardElement: Element | null = null;\n  let expandIconWidth: number = 0;\n  let cardElementWidth: number = 0;\n\n  if (popoverRef.current) {\n    cardElement = popoverRef.current.children[1].children[0].children[0];\n    cardElementWidth = cardElement.getClientRects()[0].width;\n    if (expandIconRef) {\n      expandIconWidth = expandIconRef.current?.offsetWidth || 0;\n    }\n  }\n\n  React.useEffect(() => {\n    setWidth(cardElementWidth);\n  }, [children, cardElementWidth]);\n\n  const handleAnchorKeyPress = (event: {\n    keyCode: any;\n    which: any;\n    target: any;\n  }) => {\n    var code = event.keyCode || event.which;\n    if (code === 13 || code === 40) {\n      setShowOptions(!showOptions);\n\n      setTimeout(() => {\n        if (code === 40 && firstOptionRef?.current) {\n          firstOptionRef.current.focus();\n        }\n      }, 50);\n    }\n  };\n\n  const handleOptionKeyPress = (event: {\n    keyCode: any;\n    which: any;\n    target: any;\n  }) => {\n    var code = event.keyCode || event.which;\n    if (code === 27) {\n      // escape pressed\n      setShowOptions(false);\n    }\n  };\n\n  return (\n    <div ref={ref} className={classNames}>\n      <Popover\n        anchor={\n          <div\n            className={\n              'SelectAnchor' +\n              (props.placeholder && !props.value\n                ? ' SelectAnchor--placeholder'\n                : '')\n            }\n            style={{ minWidth: width }}\n            tabIndex={0}\n            onClick={() => setShowOptions(!showOptions)}\n            onKeyDown={handleAnchorKeyPress}\n          >\n            <div className='SelectAnchor-Value'>{value}</div>\n            <div className='SelectAnchor-ExpandIcon' ref={expandIconRef}>\n              <ExpandMoreIcon />\n            </div>\n          </div>\n        }\n        open={showOptions}\n        onOutsideClick={() => setShowOptions(false)}\n        xLocation='snap_left_edge'\n        yLocation='bottom_cover_anchor'\n        ref={popoverRef}\n      >\n        <div\n          style={{\n            width: popoverRef.current?.offsetWidth || 0 + expandIconWidth\n          }}\n        >\n          {props.placeholder && (\n            <SelectOption\n              className='SelectOption--placeholder'\n              onOptionSelect={() => handleValueChange(null)}\n              onKeyDown={handleOptionKeyPress}\n            >\n              {props.placeholder}\n            </SelectOption>\n          )}\n          {options.map((option, index) => (\n            <SelectOption\n              onOptionSelect={() => handleValueChange(option.value)}\n              value={option.value}\n              key={option.value}\n              selected={option.value === props.value}\n              ref={index === 0 ? firstOptionRef : null}\n              onKeyDown={handleOptionKeyPress}\n            >\n              {option.label}\n            </SelectOption>\n          ))}\n        </div>\n      </Popover>\n    </div>\n  );\n});\n\nexport default Select;\n\nSelect.displayName = 'Select';\n","import * as React from 'react';\nimport { ComponentConfig, getClassName } from '../componentConfig';\nimport './Text.css';\n\ninterface TextHeadingOrParaProps\n  extends React.ComponentPropsWithoutRef<'h1'>,\n    React.ComponentPropsWithoutRef<'h2'>,\n    React.ComponentPropsWithoutRef<'h3'>,\n    React.ComponentPropsWithoutRef<'h4'>,\n    React.ComponentPropsWithoutRef<'h5'>,\n    React.ComponentPropsWithoutRef<'h6'>,\n    React.ComponentPropsWithoutRef<'p'> {\n  className?: string;\n  element?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p';\n}\n\ninterface SpanProps extends React.ComponentPropsWithoutRef<'span'> {\n  className?: string;\n  variation?: 'strong' | 'emphasis' | 'subdued' | 'code';\n  element?: 'span';\n}\n\ninterface OtherTextProps {\n  variation?: 'strong' | 'emphasis' | 'subdued' | 'code';\n}\n\ntype TextProps = (\n  | TextHeadingOrParaProps\n  | SpanProps\n  | { className?: string; element?: 'auto' }\n) &\n  OtherTextProps;\n\nconst componentConfig: ComponentConfig = {\n  styleKeys: ['padding', 'margin'],\n  classGenerator: {\n    variation: { type: 'value' }\n  }\n};\n\nexport const Text = React.forwardRef<\n  HTMLHeadingElement | HTMLParagraphElement | HTMLSpanElement,\n  React.PropsWithChildren<TextProps>\n>((props, ref) => {\n  const classNames = getClassName('Text', componentConfig, props);\n  const renderProps = { ...props };\n  const element =\n    !props.element || props.element === 'auto'\n      ? (props.variation && 'span') || 'p'\n      : props.element;\n  const VariationWrapper =\n    renderProps.variation === 'strong'\n      ? 'strong'\n      : renderProps.variation === 'emphasis'\n      ? 'em'\n      : renderProps.variation === 'code'\n      ? 'code'\n      : React.Fragment;\n  delete renderProps.variation;\n  delete renderProps.element;\n  if (element === 'span') {\n    if (props.element === 'span') {\n      return (\n        <span ref={ref} {...renderProps} className={classNames}>\n          <VariationWrapper>{props.children}</VariationWrapper>\n        </span>\n      );\n    }\n    return (\n      <VariationWrapper ref={ref} {...renderProps} className={classNames}>\n        {props.children}\n      </VariationWrapper>\n    );\n  }\n  if (element === 'p') {\n    return (\n      <p\n        ref={ref as React.LegacyRef<HTMLParagraphElement> | undefined}\n        {...renderProps}\n        className={classNames}\n      >\n        <VariationWrapper>{props.children}</VariationWrapper>\n      </p>\n    );\n  }\n  const RenderComponent = element;\n  return (\n    <RenderComponent\n      ref={ref as React.LegacyRef<HTMLHeadingElement> | undefined}\n      {...renderProps}\n      className={classNames}\n    >\n      <VariationWrapper>{props.children}</VariationWrapper>\n    </RenderComponent>\n  );\n});\n\nexport default Text;\n\nText.displayName = 'Text';\n\nfunction customTextClassName(props: TextProps, customComponentName: string) {\n  return `${props.className || ''} Text-${customComponentName}`;\n}\n\ntype InlineTextProps = SpanProps & OtherTextProps;\n\nexport const InlineText = React.forwardRef<\n  HTMLHeadingElement | HTMLParagraphElement | HTMLSpanElement,\n  React.PropsWithChildren<InlineTextProps>\n>((props, ref) => {\n  return (\n    <Text\n      {...props}\n      element='span'\n      ref={ref}\n      className={customTextClassName(props, 'InlineText')}\n    >\n      {props.children}\n    </Text>\n  );\n});\n\nInlineText.displayName = 'InlineText';\n\ntype HeadingProps = TextHeadingOrParaProps & OtherTextProps;\n\nexport const PageTitle = React.forwardRef<\n  HTMLHeadingElement | HTMLParagraphElement | HTMLSpanElement,\n  React.PropsWithChildren<HeadingProps>\n>((props, ref) => {\n  return (\n    <Text\n      {...props}\n      element='h1'\n      ref={ref}\n      className={customTextClassName(props, 'PageTitle')}\n    >\n      {props.children}\n    </Text>\n  );\n});\n\nPageTitle.displayName = 'PageTitle';\n\nexport const SectionHeading = React.forwardRef<\n  HTMLHeadingElement | HTMLParagraphElement | HTMLSpanElement,\n  React.PropsWithChildren<HeadingProps>\n>((props, ref) => {\n  return (\n    <Text\n      {...props}\n      element='h2'\n      ref={ref}\n      className={customTextClassName(props, 'SectionHeading')}\n    >\n      {props.children}\n    </Text>\n  );\n});\n\nSectionHeading.displayName = 'SectionHeading';\n\nexport const SubSectionHeading = React.forwardRef<\n  HTMLHeadingElement | HTMLParagraphElement | HTMLSpanElement,\n  React.PropsWithChildren<HeadingProps>\n>((props, ref) => {\n  return (\n    <Text\n      {...props}\n      element='h3'\n      ref={ref}\n      className={customTextClassName(props, 'SubSectionHeading')}\n    >\n      {props.children}\n    </Text>\n  );\n});\n\nSubSectionHeading.displayName = 'SubSectionHeading';\n\nexport const ComponentTitle = React.forwardRef<\n  HTMLHeadingElement | HTMLParagraphElement | HTMLSpanElement,\n  React.PropsWithChildren<HeadingProps>\n>((props, ref) => {\n  return (\n    <Text\n      {...props}\n      element='h3'\n      ref={ref}\n      className={customTextClassName(props, 'ComponentTitle')}\n    >\n      {props.children}\n    </Text>\n  );\n});\n\nComponentTitle.displayName = 'ComponentTitle';\n\ntype InlineCodeProps = SpanProps & OtherTextProps;\n\nexport const InlineCode = React.forwardRef<\n  HTMLHeadingElement | HTMLParagraphElement | HTMLSpanElement,\n  React.PropsWithChildren<InlineCodeProps>\n>((props, ref) => {\n  return (\n    <Text\n      {...props}\n      variation='code'\n      ref={ref}\n      className={customTextClassName(props, 'InlineCode')}\n    >\n      {props.children}\n    </Text>\n  );\n});\n\nInlineCode.displayName = 'InlineCode';\n","import * as React from 'react';\nimport { ComponentConfig, getClassName } from '../componentConfig';\nimport './Stack.css';\n\nexport interface StackProps extends React.ComponentPropsWithoutRef<'div'> {\n  className?: string;\n  vertical?: boolean;\n  wrapItems?: 'wrap' | 'nowrap' | 'wrap-reverse';\n  itemsVerticalAlignment?:\n    | 'top'\n    | 'center'\n    | 'bottom'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly';\n  itemsHorizontalAlignment?:\n    | 'left'\n    | 'center'\n    | 'right'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly';\n  gap?: 'normal' | 'small' | 'smaller' | 'large' | 'larger' | 'nogap' | true;\n}\n\nconst componentConfig: ComponentConfig = {\n  styleKeys: [],\n  classGenerator: {\n    vertical: { type: 'boolean', default: false },\n    itemsVerticalAlignment: { type: 'value' },\n    itemsHorizontalAlignment: { type: 'value' },\n    wrapItems: { type: 'value' },\n    gap: { type: 'value', default: 'nogap' }\n  }\n};\n\nexport const Stack = React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<StackProps>\n>((props, ref) => {\n  const classNames = getClassName('Stack', componentConfig, props);\n  const renderProps = { ...props };\n  delete renderProps.vertical;\n  delete renderProps.gap;\n  delete renderProps.wrapItems;\n  delete renderProps.itemsHorizontalAlignment;\n  delete renderProps.itemsVerticalAlignment;\n  return (\n    <div {...renderProps} ref={ref} className={classNames}>\n      {props.children}\n    </div>\n  );\n});\n\nexport default Stack;\n\nStack.displayName = 'Stack';\n\nexport interface StackItemProps extends React.ComponentPropsWithoutRef<'div'> {\n  className?: string;\n  fill?: boolean;\n}\n\nconst stackItemComponentConfig: ComponentConfig = {\n  styleKeys: [],\n  classGenerator: {\n    fill: { type: 'boolean', default: false }\n  }\n};\n\nexport const StackItem = React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<StackItemProps>\n>((props, ref) => {\n  const classNames = getClassName('StackItem', stackItemComponentConfig, props);\n  const renderProps = { ...props };\n  return (\n    <div {...renderProps} ref={ref} className={classNames}>\n      {props.children}\n    </div>\n  );\n});\n\nStackItem.displayName = 'StackItem';\n\nfunction customStackClassName(props: StackProps, customComponentName: string) {\n  return `${props.className || ''} Stack-${customComponentName}`;\n}\n\nexport const VerticalStack = React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<StackProps>\n>((props, ref) => {\n  return (\n    <Stack\n      {...props}\n      ref={ref}\n      className={customStackClassName(props, 'VerticalStack')}\n      vertical\n    >\n      {props.children}\n    </Stack>\n  );\n});\n\nVerticalStack.displayName = 'VerticalStack';\n\nexport const HorizontalStack = React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<StackProps>\n>((props, ref) => {\n  return (\n    <Stack\n      {...props}\n      ref={ref}\n      className={customStackClassName(props, 'HorizontalStack')}\n      vertical={false}\n    >\n      {props.children}\n    </Stack>\n  );\n});\n\nHorizontalStack.displayName = 'HorizontalStack';\n\nexport const CenteredContainer = React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<StackProps>\n>((props, ref) => {\n  return (\n    <Stack\n      {...props}\n      ref={ref}\n      className={customStackClassName(props, 'CenteredContainer')}\n      vertical={false}\n      itemsHorizontalAlignment='center'\n      itemsVerticalAlignment='center'\n    >\n      {props.children}\n    </Stack>\n  );\n});\n\nCenteredContainer.displayName = 'CenteredContainer';\n","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst TableContext = React.createContext({variant: 'body'});\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'Tablelvl2Context';\n}\n\nexport default TableContext;","import * as React from 'react';\nimport { ComponentConfig, getClassName } from '../componentConfig';\nimport './Table.css';\nimport TableContext from './TableContext';\n\ninterface TableProps extends React.ComponentPropsWithoutRef<'table'> {\n  className?: string;\n  hasRowDivider?: boolean;\n  hasColumnDivider?: boolean;\n  hasBodyBorder?: boolean;\n  headerCentered?: boolean;\n  fullWidth?: boolean;\n}\n\nconst componentConfig: ComponentConfig = {\n  styleKeys: ['padding', 'margin'],\n  classGenerator: {\n    hasRowDivider: { type: 'boolean', default: false },\n    hasColumnDivider: { type: 'boolean', default: false },\n    hasBodyBorder: { type: 'boolean', default: false },\n    headerCentered: { type: 'boolean', default: false },\n    fullWidth: { type: 'boolean', default: false }\n  }\n};\n\nexport const Table = React.forwardRef<\n  HTMLTableElement,\n  React.PropsWithChildren<TableProps>\n>((props, ref) => {\n  const classNames = getClassName('Table', componentConfig, props);\n  const renderProps = { ...props };\n  delete renderProps.hasBodyBorder;\n  delete renderProps.hasColumnDivider;\n  delete renderProps.hasRowDivider;\n  delete renderProps.fullWidth;\n  return (\n    <table ref={ref} {...renderProps} className={classNames}>\n      {props.children}\n    </table>\n  );\n});\n\nexport default Table;\n\nTable.displayName = 'Table';\n\ninterface TableHeadProps extends React.ComponentPropsWithoutRef<'thead'> {\n  className?: string;\n}\n\nconst tableHeadComponentConfig: ComponentConfig = {\n  styleKeys: [],\n  classGenerator: {}\n};\n\nexport function TableHead(props: TableHeadProps) {\n  const classNames = getClassName('TableHead', tableHeadComponentConfig, props);\n  const renderProps = { ...props };\n  return (\n    <TableContext.Provider value={{ variant: 'head' }}>\n      <thead {...renderProps} className={classNames}>\n        {props.children}\n      </thead>\n    </TableContext.Provider>\n  );\n}\n\nTableHead.displayName = 'TableHead';\n\ninterface TableBodyProps extends React.ComponentPropsWithoutRef<'tbody'> {\n  className?: string;\n}\n\nconst tableBodyComponentConfig: ComponentConfig = {\n  styleKeys: [],\n  classGenerator: {}\n};\n\nexport function TableBody(props: TableBodyProps) {\n  const classNames = getClassName('TableBody', tableBodyComponentConfig, props);\n  const renderProps = { ...props };\n  return (\n    <TableContext.Provider value={{ variant: 'body' }}>\n      <tbody {...renderProps} className={classNames}>\n        {props.children}\n      </tbody>\n    </TableContext.Provider>\n  );\n}\n\nTableBody.displayName = 'TableBody';\n\ninterface TableFooterProps extends React.ComponentPropsWithoutRef<'tfoot'> {\n  className?: string;\n}\n\nconst tableFooterComponentConfig: ComponentConfig = {\n  styleKeys: [],\n  classGenerator: {}\n};\n\nexport function TableFooter(props: TableFooterProps) {\n  const classNames = getClassName(\n    'TableFooter',\n    tableFooterComponentConfig,\n    props\n  );\n  const renderProps = { ...props };\n  return (\n    <TableContext.Provider value={{ variant: 'footer' }}>\n      <tfoot {...renderProps} className={classNames}>\n        {props.children}\n      </tfoot>\n    </TableContext.Provider>\n  );\n}\n\nTableBody.displayName = 'TableFooter';\n\ninterface TableRowProps extends React.ComponentPropsWithoutRef<'tr'> {\n  className?: string;\n}\n\nconst tableRowComponentConfig: ComponentConfig = {\n  styleKeys: [],\n  classGenerator: {}\n};\n\nexport function TableRow(props: TableRowProps) {\n  const classNames = getClassName('TableRow', tableRowComponentConfig, props);\n  const renderProps = { ...props };\n  return (\n    <tr {...renderProps} className={classNames}>\n      {props.children}\n    </tr>\n  );\n}\n\nTableBody.displayName = 'TableRow';\n\ninterface TableHeaderCellProps extends React.ComponentPropsWithoutRef<'th'> {\n  className?: string;\n  element?: 'th';\n}\n\ninterface TableDataCellProps extends React.ComponentPropsWithoutRef<'td'> {\n  className?: string;\n  element?: 'td';\n}\n\ntype TableCellProps = TableHeaderCellProps | TableDataCellProps;\n\nconst tableCellComponentConfig: ComponentConfig = {\n  styleKeys: [],\n  classGenerator: {}\n};\n\nexport const TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.PropsWithChildren<TableCellProps>\n>((props, ref) => {\n  const tableContext = React.useContext(TableContext);\n  const renderProps = { ...props };\n  const RenderComponent =\n    props.element || tableContext.variant === 'head' ? 'th' : 'tr';\n  const classNames = getClassName(\n    'TableCell',\n    tableCellComponentConfig,\n    props,\n    `TableCell--${RenderComponent === 'th' ? 'Head' : 'Data'}`\n  );\n  if (RenderComponent === 'th') {\n    return (\n      <th ref={ref} {...renderProps} className={classNames}>\n        {props.children}\n      </th>\n    );\n  } else {\n    return (\n      <td ref={ref} {...renderProps} className={classNames}>\n        {props.children}\n      </td>\n    );\n  }\n});\n\nTableBody.displayName = 'TableCell';\n\nexport const TableHeaderCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.PropsWithChildren<TableCellProps>\n>((props, ref) => {\n  return <TableCell ref={ref} {...props} element='th' />;\n});\n\nTableHeaderCell.displayName = 'TableHeaderCell';\n\nexport const TableDataCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.PropsWithChildren<TableCellProps>\n>((props, ref) => {\n  return <TableCell ref={ref} {...props} element='td' />;\n});\n\nTableDataCell.displayName = 'TableDataCell';\n\nexport function TableHeadRow(props: TableHeadProps) {\n  return (\n    <TableHead {...props}>\n      <TableRow>{props.children}</TableRow>\n    </TableHead>\n  );\n}\n\nTableHeadRow.displayName = 'TableHeadRow';\n\ninterface HeaderTableProps extends TableProps {\n  header: React.ReactNode;\n}\n\nexport const HeaderTable = React.forwardRef<\n  HTMLTableElement,\n  React.PropsWithChildren<HeaderTableProps>\n>((props, ref) => {\n  const classNames = getClassName('Table', componentConfig, props);\n  const renderProps = { ...props };\n  delete renderProps.header;\n  return (\n    <Table ref={ref} {...renderProps} className={classNames}>\n      {props.header}\n      <TableBody>{props.children}</TableBody>\n    </Table>\n  );\n});\n\nHeaderTable.displayName = 'HeaderTable';\n","import * as React from 'react';\nimport './styles.css';\nimport { setThemeVariables } from './ThemeWrapper';\nexport { default as Button } from './Button';\nexport { default as TextField, Input, TextArea } from './TextField';\nexport { default as FormField } from './FormField';\nexport { default as ThemeWrapper } from './ThemeWrapper';\nexport { default as Checkbox, CheckboxField } from './Checkbox';\nexport { default as Select, SelectOption } from './Select';\nexport { default as Card } from './Card';\nexport { default as Popover } from './Popover';\nexport {\n  default as Text,\n  InlineText,\n  PageTitle,\n  SectionHeading,\n  SubSectionHeading,\n  ComponentTitle,\n  InlineCode\n} from './Text';\nexport {\n  default as Stack,\n  HorizontalStack,\n  VerticalStack,\n  CenteredContainer\n} from './Stack';\nexport {\n  default as Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableDataCell,\n  TableHeaderCell,\n  HeaderTable,\n  TableHeadRow\n} from './Table';\n\ninterface Props {\n  text: string;\n}\n\nexport const ExampleComponent = ({ text }: Props) => {\n  return <div className='test'>Example Component: {text}</div>;\n};\n\nfunction getInitialRootVars() {\n  const root =\n    document.querySelector<HTMLElement>(':root') || document.documentElement;\n  const rootVars: string[] = [];\n  for (let i = 0; i < root.style.length; i++) {\n    rootVars.push(root.style[i]);\n  }\n  return rootVars;\n}\n\nfunction init() {\n  window.BaseElementsReact = {\n    initialRootVars: getInitialRootVars()\n  };\n\n  setThemeVariables([], 'default');\n}\n\ninit();\n","var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgStar = function SvgStar(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    width: 24,\n    viewBox: \"0 0 48 48\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m16.15 37.75 7.85-4.7 7.85 4.75-2.1-8.9 6.9-6-9.1-.8L24 13.7l-3.55 8.35-9.1.8 6.9 6ZM11.65 44l3.25-14.05L4 20.5l14.4-1.25L24 6l5.6 13.25L44 20.5l-10.9 9.45L36.35 44 24 36.55ZM24 26.25Z\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgStar, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/star.be8ba260.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport {\n  Card,\n  SectionHeading,\n  SubSectionHeading,\n  Text,\n  InlineCode,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Button\n} from 'base-elements-react/dist';\nimport { HorizontalStack, VerticalStack } from 'base-elements-react/dist';\n\nfunction ButtonSection() {\n  return (\n    <VerticalStack className='section'>\n      <SectionHeading>Button</SectionHeading>\n      <SubSectionHeading>Props</SubSectionHeading>\n\n      <VerticalStack>\n        <Card elevation='low'>\n          <VerticalStack gap>\n            <Text element='h4'>appearance</Text>\n            <HorizontalStack gap itemsHorizontalAlignment='space-around'>\n              <Button onClick={() => console.log('Primary Button Clicked')}>\n                Primary\n              </Button>\n              <Button\n                onClick={() => console.log('Secondary Button Clicked')}\n                appearance='secondary'\n              >\n                Secondary\n              </Button>\n              <Button\n                onClick={() => console.log('Danger Button Clicked')}\n                appearance='danger'\n              >\n                Danger\n              </Button>\n            </HorizontalStack>\n          </VerticalStack>\n          <br />\n          <Table hasRowDivider fullWidth>\n            <TableHead>\n              <TableRow>\n                <TableCell>Possible Values</TableCell>\n                <TableCell>Default Value</TableCell>\n                <TableCell>Description</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <InlineCode>\"primary\"</InlineCode> |{' '}\n                  <InlineCode>\"secondary\"</InlineCode> |{' '}\n                  <InlineCode>\"danger\"</InlineCode>\n                </TableCell>\n                <TableCell>\n                  <InlineCode>\"primary\"</InlineCode>\n                </TableCell>\n                <TableCell>Appearance of the button</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Card>\n\n        <br />\n        <br />\n        <br />\n        <Card elevation='low'>\n          <VerticalStack gap>\n            <Text element='h4'>disabled</Text>\n            <HorizontalStack gap itemsHorizontalAlignment='space-around'>\n              <Button\n                onClick={() => console.log('Primary Disabled Button Clicked')}\n                disabled\n              >\n                Primary Disabled\n              </Button>\n              <Button\n                onClick={() => console.log('Secondary Disabled Button Clicked')}\n                disabled\n                appearance='secondary'\n              >\n                Secondary Disabled\n              </Button>\n              <Button\n                onClick={() => console.log('Danger Disabled Button Clicked')}\n                disabled\n                appearance='danger'\n              >\n                Danger Disabled\n              </Button>\n            </HorizontalStack>\n          </VerticalStack>\n          <br />\n          <Table hasRowDivider fullWidth>\n            <TableHead>\n              <TableRow>\n                <TableCell>Possible Values</TableCell>\n                <TableCell>Default Value</TableCell>\n                <TableCell>Description</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <InlineCode>true</InlineCode> | <InlineCode>false</InlineCode>\n                </TableCell>\n                <TableCell>\n                  <InlineCode>false</InlineCode>\n                </TableCell>\n                <TableCell>Make the button disabled</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Card>\n\n        <br />\n        <br />\n        <br />\n        <Card elevation='low'>\n          <VerticalStack gap>\n            <Text element='h4'>variation</Text>\n            <HorizontalStack gap itemsHorizontalAlignment='space-around'>\n              <Button\n                onClick={() => console.log('Primary Outline Button Clicked')}\n                variation='outline'\n              >\n                Primary Outline\n              </Button>\n              <Button\n                onClick={() => console.log('Secondary Outline Button Clicked')}\n                variation='outline'\n                appearance='secondary'\n              >\n                Secondary Outline\n              </Button>\n              <Button\n                onClick={() => console.log('Danger Outline Button Clicked')}\n                variation='outline'\n                appearance='danger'\n              >\n                Danger Outline\n              </Button>\n            </HorizontalStack>\n            <HorizontalStack gap itemsHorizontalAlignment='space-around'>\n              <Button\n                onClick={() => console.log('Primary Plain Button Clicked')}\n                variation='plain'\n              >\n                Plain Primary\n              </Button>\n              <Button\n                appearance='secondary'\n                onClick={() => console.log('Secondary Plain Button Clicked')}\n                variation='plain'\n              >\n                Plain Secondary\n              </Button>\n              <Button\n                appearance='danger'\n                onClick={() => console.log('Danger Plain Button Clicked')}\n                variation='plain'\n              >\n                Plain Danger\n              </Button>\n            </HorizontalStack>\n            <HorizontalStack gap itemsHorizontalAlignment='space-around'>\n              <Button\n                onClick={() =>\n                  console.log('Primary PlainWithPadding Button Clicked')\n                }\n                variation='plainWithPadding'\n              >\n                PlainWithPadding Primary\n              </Button>\n              <Button\n                appearance='secondary'\n                onClick={() =>\n                  console.log('Secondary PlainWithPadding Button Clicked')\n                }\n                variation='plainWithPadding'\n              >\n                PlainWithPadding Secondary\n              </Button>\n              <Button\n                appearance='danger'\n                onClick={() =>\n                  console.log('Danger PlainWithPadding Button Clicked')\n                }\n                variation='plainWithPadding'\n              >\n                PlainWithPadding Danger\n              </Button>\n            </HorizontalStack>\n          </VerticalStack>\n          <br />\n          <Table hasRowDivider>\n            <TableHead>\n              <TableRow>\n                <TableCell>Possible Values</TableCell>\n                <TableCell>Default Value</TableCell>\n                <TableCell>Description</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <InlineCode>\"plain\"</InlineCode> |{' '}\n                  <InlineCode>\"outline\"</InlineCode> |{' '}\n                  <InlineCode>\"plainWithPadding\"</InlineCode> |{' '}\n                  <InlineCode>undefined</InlineCode>\n                </TableCell>\n                <TableCell>\n                  <InlineCode>undefined</InlineCode>\n                </TableCell>\n                <TableCell>Variation in appearance</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Card>\n      </VerticalStack>\n    </VerticalStack>\n  );\n}\n\nexport default ButtonSection;\n","import React from 'react';\nimport {\n  SectionHeading,\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell\n} from 'base-elements-react/dist';\nimport { VerticalStack } from 'base-elements-react/dist';\n\nfunction TableSection() {\n  return (\n    <VerticalStack className='section'>\n      <SectionHeading>Table</SectionHeading>\n      <Table hasRowDivider>\n        <TableHead>\n          <TableRow>\n            <TableCell>Sr. no.</TableCell>\n            <TableCell>Planet</TableCell>\n            <TableCell>Distance from sun</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell>Mercury</TableCell>\n            <TableCell>46.098 million km</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Venus</TableCell>\n            <TableCell>107.78 million km</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Earth</TableCell>\n            <TableCell>149.48 million km</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Mars</TableCell>\n            <TableCell>219.16 million km</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </VerticalStack>\n  );\n}\n\nexport default TableSection;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { ReactComponent as StarIcon } from './icons/star.svg';\n\nimport 'base-elements-react/dist/index.css';\nimport {\n  ThemeWrapper,\n  PageTitle,\n  HorizontalStack,\n  VerticalStack,\n  Card,\n  Button\n} from 'base-elements-react/dist';\nimport ButtonSection from './sections/ButtonSection';\nimport TextFieldSection from './sections/TextFieldSection';\nimport CheckboxSection from './sections/CheckboxSection';\nimport PopoverSection from './sections/PopoverSection';\nimport SelectSection from './sections/SelectSection';\nimport CardSection from './sections/CardSection';\nimport TableSection from './sections/TableSection';\n\nconst themes = [\n  {\n    id: 'light',\n    vars: {\n      colors: {\n        primaryColor: '#29B6F6',\n        primaryColorHover: '#03A9F4',\n        primaryColorDisabled: '#81D4FA',\n        primaryColorBackground: '#E1F5FE'\n      }\n    }\n  }\n];\n\nconst sectionRouteMap = {\n  button: ButtonSection,\n  textfield: TextFieldSection,\n  checkbox: CheckboxSection,\n  select: SelectSection,\n  card: CardSection,\n  popover: PopoverSection,\n  table: TableSection\n};\n\nconst CurrentSection = ({ hashRoute }: { hashRoute: string }) => {\n  const RenderComponent =\n    sectionRouteMap[hashRoute || 'button'] || ButtonSection;\n  return <RenderComponent />;\n};\n\nconst RouteSelectorItem = (props: {\n  route: string;\n  onRouteSelect: (route: string) => void;\n  selected?: boolean;\n}) => {\n  const handleClick = () => {\n    window.location.hash = props.route;\n    props.onRouteSelect(props.route);\n  };\n  return (\n    <Button\n      onClick={handleClick}\n      appearance={props.selected ? 'primary' : 'secondary'}\n      variation='plainWithPadding'\n    >\n      {sectionRouteMap[props.route].name.split('Section')[0]}\n    </Button>\n  );\n};\n\nconst Sidebar = (props: {\n  onRouteSelect: (route: string) => void;\n  currentRoute: string;\n}) => {\n  const routes = Object.keys(sectionRouteMap);\n  return (\n    <Card elevation='high'>\n      <VerticalStack gap='normal'>\n        {routes.map((route) => (\n          <RouteSelectorItem\n            key={route}\n            route={route}\n            selected={route === props.currentRoute}\n            onRouteSelect={props.onRouteSelect}\n          />\n        ))}\n      </VerticalStack>\n    </Card>\n  );\n};\n\nconst App = () => {\n  const [hashRoute, setHashRoute] = useState(window.location.hash.slice(1));\n  return (\n    <div className='App'>\n      <ThemeWrapper themes={themes} currentThemeId='light'>\n        <PageTitle>\n          <HorizontalStack gap itemsVerticalAlignment='center'>\n            Base Elements React - Demo <StarIcon height={'1em'} width='1em' />\n          </HorizontalStack>\n        </PageTitle>\n        <HorizontalStack gap='larger'>\n          <Sidebar onRouteSelect={setHashRoute} currentRoute={hashRoute} />\n          <CurrentSection hashRoute={hashRoute} />\n        </HorizontalStack>\n      </ThemeWrapper>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport {\n  Card,\n  HorizontalStack,\n  SectionHeading,\n  SubSectionHeading,\n  Table,\n  Text,\n  TextField,\n  TableRow,\n  TableBody,\n  TableHead,\n  TableCell,\n  InlineCode\n} from 'base-elements-react/dist';\nimport { VerticalStack } from 'base-elements-react/dist';\n\nfunction TextFieldSection() {\n  return (\n    <VerticalStack className='section'>\n      <SectionHeading>TextField</SectionHeading>\n      <Text>Renders an Input or a TextArea component.</Text>\n      <br />\n      <SubSectionHeading>Props</SubSectionHeading>\n      <Text>\n        Other than below mentioned props, TextField accepts all props that can\n        be sent to Input or TextArea, such as <InlineCode>value</InlineCode>,{' '}\n        <InlineCode>onChange</InlineCode> etc.\n      </Text>\n      <br />\n      <br />\n\n      <Card elevation='low'>\n        <VerticalStack gap>\n          <Text element='h4'>label</Text>\n          <HorizontalStack gap itemsHorizontalAlignment='space-around'>\n            <TextField label='Enter your name' />\n          </HorizontalStack>\n        </VerticalStack>\n        <br />\n        <Table hasRowDivider fullWidth>\n          <TableHead>\n            <TableRow>\n              <TableCell>Possible Values</TableCell>\n              <TableCell>Default Value</TableCell>\n              <TableCell>Description</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                <InlineCode>string</InlineCode>\n              </TableCell>\n              <TableCell>\n                <InlineCode>\"\"</InlineCode>\n              </TableCell>\n              <TableCell>\n                Label for the text field. Extended from FormField component.\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </Card>\n      <br />\n      <br />\n      <br />\n      <Card elevation='low'>\n        <VerticalStack gap>\n          <Text element='h4'>labelPosition</Text>\n          <HorizontalStack\n            gap\n            itemsHorizontalAlignment='space-around'\n            wrapItems='wrap'\n          >\n            <TextField label='Enter your name' labelPosition='top' />\n            <TextField label='Enter your name' labelPosition='right' />\n          </HorizontalStack>\n          <HorizontalStack\n            gap\n            itemsHorizontalAlignment='space-around'\n            wrapItems='wrap'\n          >\n            <TextField label='Enter your name' labelPosition='bottom' />\n            <TextField label='Enter your name' labelPosition='left' />\n          </HorizontalStack>\n        </VerticalStack>\n        <br />\n        <Table hasRowDivider fullWidth>\n          <TableHead>\n            <TableRow>\n              <TableCell>Possible Values</TableCell>\n              <TableCell>Default Value</TableCell>\n              <TableCell>Description</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                <InlineCode>\"top\"</InlineCode> |{' '}\n                <InlineCode>\"right\"</InlineCode> |{' '}\n                <InlineCode>\"bottom\"</InlineCode> |{' '}\n                <InlineCode>\"left\"</InlineCode>\n              </TableCell>\n              <TableCell>\n                <InlineCode>\"top\"</InlineCode>\n              </TableCell>\n              <TableCell>\n                Position of the label. Extended from FormField component\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </Card>\n      <br />\n      <br />\n      <br />\n      <Card elevation='low'>\n        <VerticalStack gap>\n          <Text element='h4'>multiline</Text>\n          <HorizontalStack gap itemsHorizontalAlignment='space-around'>\n            <TextField label='Enter your name' />\n            <TextField label='Enter your address' multiline />\n          </HorizontalStack>\n        </VerticalStack>\n        <br />\n        <Table hasRowDivider fullWidth>\n          <TableHead>\n            <TableRow>\n              <TableCell>Possible Values</TableCell>\n              <TableCell>Default Value</TableCell>\n              <TableCell>Description</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                <InlineCode>true</InlineCode> | <InlineCode>false</InlineCode>\n              </TableCell>\n              <TableCell>\n                <InlineCode>false</InlineCode>\n              </TableCell>\n              <TableCell>\n                Renders input component if false, else renders a textarea.\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </Card>\n      <br />\n      <br />\n      <br />\n      <Card elevation='low'>\n        <VerticalStack gap>\n          <Text element='h4'>error</Text>\n          <HorizontalStack gap itemsHorizontalAlignment='space-around'>\n            <TextField\n              label='Enter a username'\n              error='Should be at least 6 characters'\n            />\n          </HorizontalStack>\n        </VerticalStack>\n        <br />\n        <Table hasRowDivider fullWidth>\n          <TableHead>\n            <TableRow>\n              <TableCell>Possible Values</TableCell>\n              <TableCell>Default Value</TableCell>\n              <TableCell>Description</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                <InlineCode>string</InlineCode>\n              </TableCell>\n              <TableCell>\n                <InlineCode>\"\"</InlineCode>\n              </TableCell>\n              <TableCell>Renders error.</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </Card>\n    </VerticalStack>\n  );\n}\n\nexport default TextFieldSection;\n","import React, { SyntheticEvent } from 'react';\nimport {\n  Checkbox,\n  InlineCode,\n  SectionHeading,\n  SubSectionHeading,\n  HeaderTable,\n  TableHeadRow,\n  Text,\n  TableRow,\n  TableCell,\n  Card,\n  HorizontalStack\n} from 'base-elements-react/dist';\nimport { VerticalStack } from 'base-elements-react/dist';\nimport { useState } from 'react';\n\nfunction CheckboxSection() {\n  const [checked, setChecked] = useState<boolean>(false);\n  return (\n    <VerticalStack className='section'>\n      <SectionHeading>Checkbox</SectionHeading>\n      <Text>\n        Renders an input with <InlineCode>type='checkbox'</InlineCode>\n      </Text>\n      <br />\n      <SubSectionHeading>Props</SubSectionHeading>\n      Accepts all props that can be forwarded to input.\n      <br />\n      <br />\n      <Card elevation='low'>\n        <VerticalStack gap>\n          <Text element='h4'>checked</Text>\n          <HorizontalStack gap itemsHorizontalAlignment='space-around'>\n            <Checkbox checked={false} />\n            <Checkbox checked={true} />\n          </HorizontalStack>\n        </VerticalStack>\n        <br />\n        <HeaderTable\n          hasRowDivider\n          fullWidth\n          header={\n            <TableHeadRow>\n              <TableCell>Possible Values</TableCell>\n              <TableCell>Default Value</TableCell>\n              <TableCell>Description</TableCell>\n            </TableHeadRow>\n          }\n        >\n          <TableRow>\n            <TableCell>\n              <InlineCode>true</InlineCode> | <InlineCode>false</InlineCode>\n            </TableCell>\n            <TableCell>\n              <InlineCode>false</InlineCode>\n            </TableCell>\n            <TableCell>Renders checked checkbox if true</TableCell>\n          </TableRow>\n        </HeaderTable>\n      </Card>\n      <br />\n      <br />\n      <br />\n      <Card elevation='low'>\n        <VerticalStack gap>\n          <Text element='h4'>sizeVariant</Text>\n          <HorizontalStack gap itemsHorizontalAlignment='space-around'>\n            <Checkbox\n              sizeVariant='normal'\n              checked={checked}\n              onChange={(e: SyntheticEvent<EventTarget>) =>\n                setChecked((e.target as HTMLInputElement).checked)\n              }\n            />\n            <Checkbox\n              sizeVariant='large'\n              checked={checked}\n              onChange={(e: SyntheticEvent<EventTarget>) =>\n                setChecked((e.target as HTMLInputElement).checked)\n              }\n            />\n          </HorizontalStack>\n        </VerticalStack>\n        <br />\n        <HeaderTable\n          hasRowDivider\n          fullWidth\n          header={\n            <TableHeadRow>\n              <TableCell>Possible Values</TableCell>\n              <TableCell>Default Value</TableCell>\n              <TableCell>Description</TableCell>\n            </TableHeadRow>\n          }\n        >\n          <TableRow>\n            <TableCell>\n              <InlineCode>\"normal\"</InlineCode> |{' '}\n              <InlineCode>\"large\"</InlineCode> |<br /> (any other string if you\n              want to update size using css)\n            </TableCell>\n            <TableCell>\n              <InlineCode>\"normal\"</InlineCode>\n            </TableCell>\n            <TableCell>Size of the checkbox</TableCell>\n          </TableRow>\n        </HeaderTable>\n      </Card>\n    </VerticalStack>\n  );\n}\n\nexport default CheckboxSection;\n","import React from 'react';\nimport {\n  Select,\n  SectionHeading,\n  SelectOption,\n  HorizontalStack\n} from 'base-elements-react/dist';\nimport { VerticalStack } from 'base-elements-react/dist';\nimport { useState } from 'react';\n\nimport { ReactComponent as StarIcon } from '../icons/star.svg';\n\nfunction SelectSection() {\n  const [value, setValue] = useState<string | undefined | null>(null);\n  return (\n    <VerticalStack className='section'>\n      <SectionHeading>Select</SectionHeading>\n      <Select value={value} onValueChange={setValue}>\n        <SelectOption value='op1'>Option 1 as string</SelectOption>\n        <SelectOption value='op2'>Option 2 as string</SelectOption>\n        <SelectOption value='star'>\n          <HorizontalStack itemsVerticalAlignment='center'>\n            <StarIcon /> Option with component\n          </HorizontalStack>\n        </SelectOption>\n      </Select>\n    </VerticalStack>\n  );\n}\n\nexport default SelectSection;\n","import React from 'react';\nimport { SectionHeading, Card } from 'base-elements-react/dist';\nimport { VerticalStack } from 'base-elements-react/dist';\n\nfunction CardSection() {\n  return (\n    <VerticalStack className='section'>\n      <SectionHeading>Card</SectionHeading>\n      <Card elevation='low'>Low card component :p</Card>\n      <br />\n      <Card>Normal card component :p</Card>\n      <br />\n      <Card elevation='high'>High card component :p</Card>\n    </VerticalStack>\n  );\n}\n\nexport default CardSection;\n","import React, { useState } from 'react';\nimport { Button, Popover, SectionHeading } from 'base-elements-react/dist';\nimport { HorizontalStack, VerticalStack } from 'base-elements-react/dist';\n\nfunction PopoverSection() {\n  const [open, setOpen] = useState<boolean>(false);\n  const toggleOpen = () => setOpen(!open);\n  const close = () => setOpen(false);\n  return (\n    <VerticalStack className='section'>\n      <SectionHeading>Popover</SectionHeading>\n      <HorizontalStack gap wrapItems='wrap'>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='snap_left_edge'\n          yLocation='top'\n        >\n          Hello!\n        </Popover>\n        {/* <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='center'\n          yLocation='top'\n        >\n          Hello!\n        </Popover>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='snap_right_edge'\n          yLocation='top'\n        >\n          Hello!\n        </Popover>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='snap_left_edge'\n          yLocation='top_cover_anchor'\n        >\n          Hello!\n        </Popover>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='center'\n          yLocation='top_cover_anchor'\n        >\n          Hello!\n        </Popover>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='snap_right_edge'\n          yLocation='top_cover_anchor'\n        >\n          Hello!\n        </Popover>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='snap_left_edge'\n          yLocation='center'\n        >\n          Hello!\n        </Popover>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='center'\n          yLocation='center'\n        >\n          Hello!\n        </Popover>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='snap_right_edge'\n          yLocation='center'\n        >\n          Hello!\n        </Popover>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='snap_left_edge'\n          yLocation='bottom_cover_anchor'\n        >\n          Hello!\n        </Popover>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='center'\n          yLocation='bottom_cover_anchor'\n        >\n          Hello!\n        </Popover>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='snap_right_edge'\n          yLocation='bottom_cover_anchor'\n        >\n          Hello!\n        </Popover>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='snap_left_edge'\n          yLocation='bottom'\n        >\n          Hello!\n        </Popover>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='center'\n          yLocation='bottom'\n        >\n          Hello!\n        </Popover>\n        <Popover\n          anchor={<Button onClick={toggleOpen}>Toggle Popover</Button>}\n          open={open}\n          onOutsideClick={close}\n          xLocation='snap_right_edge'\n          yLocation='bottom'\n        >\n          Hello!\n        </Popover> */}\n      </HorizontalStack>\n    </VerticalStack>\n  );\n}\n\nexport default PopoverSection;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}